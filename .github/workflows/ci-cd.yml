name: Docker Build, Lint & Security Scan

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Étape 1 : Lint Dockerfile
      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@v2.0.0
        with:
          dockerfile: Dockerfile

      # Étape 2 : Lint YAML
      - name: Install yamllint
        run: pip install yamllint

      - name: Lint Kubernetes file
        run: yamllint k8sdeployment.yaml

      # Étape 3 : Build Docker
      - name: Build Docker image
        run: docker build -t flask-app .

  security-scan:
    runs-on: ubuntu-latest
    needs: build-lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Scan des dépendances Python (requirements.txt)
      - name: Scan des dépendances avec Trivy
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          scan-ref: "requirements.txt"
          format: "table"
          exit-code: "0"
          output: "trivy-dependencies-results.txt"

      # Scan de l'image Docker avec Trivy
      - name: Scan de l'image Docker avec Trivy
        run: |
          docker build -t flask-app .
          trivy image --format table --exit-code 0 --output trivy-image-results.txt flask-app

      # Upload des résultats comme artefacts
      - name: Upload les rapports de scan
        uses: actions/upload-artifact@v3
        with:
          name: security-reports
          path: |
            trivy-*-results.txt

      # Validation des politiques Kubernetes avec Conftest
      - name: Install Conftest
        run: |
          wget https://github.com/open-policy-agent/conftest/releases/download/v0.45.0/conftest_0.45.0_Linux_x86_64.tar.gz
          tar -xzf conftest_*.tar.gz
          sudo mv conftest /usr/local/bin/

      - name: Validate Kubernetes config
        run: |
          conftest test k8sdeployment.yaml -p policies/ --all-namespaces
